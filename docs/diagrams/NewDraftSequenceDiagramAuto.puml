@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":IncidentManagerParser" as IncidentManagerParser LOGIC_COLOR
participant "n:NewCommand" as NewCommand LOGIC_COLOR
participant "f:VehicleAssignmentCommand" as VehicleAssignmentCommand LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
participant "draft:Incident" as Incident MODEL_COLOR
end box
[-> IncidentManagerParser : parseCommand("new dist/1 auto/y")
activate IncidentManagerParser

create NewCommand
IncidentManagerParser -> NewCommand
activate NewCommand

NewCommand --> IncidentManagerParser : n
deactivate NewCommand

'# execute'
IncidentManagerParser --> NewCommand : execute()
activate NewCommand

NewCommand -> Model : getLoggedInPerson()
activate Model

Model --> NewCommand : loggedInPerson
deactivate Model

'# creating draft'
create Incident
NewCommand -> Incident : createIncident
activate Incident

Incident --> NewCommand : draft
deactivate Incident

'# dispatch vehicle'
create VehicleAssignmentCommand
NewCommand -> VehicleAssignmentCommand : dispatchVehicle()
activate VehicleAssignmentCommand

VehicleAssignmentCommand --> NewCommand : f
deactivate VehicleAssignmentCommand

NewCommand -> VehicleAssignmentCommand : execute()
activate VehicleAssignmentCommand

'# filtering'
VehicleAssignmentCommand -> Model : getUpdatedFilteredIncidentList(PREDICATE_DISTRICT)
activate Model

Model --> VehicleAssignmentCommand : nearbyVehicles
deactivate Model

'# dispatching'
VehicleAssignmentCommand --> VehicleAssignmentCommand :autoAssign()

VehicleAssignmentCommand --> Incident : draft.addVehicle(nearbyVehicles.get(0))
activate Incident

Incident --> VehicleAssignmentCommand
deactivate Incident

VehicleAssignmentCommand --> NewCommand
deactivate VehicleAssignmentCommand

[<-- NewCommand : result
deactivate NewCommand
@enduml
